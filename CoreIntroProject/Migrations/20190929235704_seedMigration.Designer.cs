// <auto-generated />
using CoreIntroProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreIntroProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190929235704_seedMigration")]
    partial class seedMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreIntroProject.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Snowboards"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Goggles"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Bindings"
                        });
                });

            modelBuilder.Entity("CoreIntroProject.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDealOfTheWeek")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            CategoryId = 1,
                            ImageThumbnailUrl = "https://cdn.shopify.com/s/files/1/0257/8209/products/drinkwatersnowboards3_large.jpg?v=1538422318",
                            ImageUrl = "https://cdn.shopify.com/s/files/1/0257/8209/products/drinkwatersnowboards3_large.jpg?v=1538422318",
                            InStock = true,
                            IsDealOfTheWeek = true,
                            LongDescription = "2019 Edition - V-Rocker Burton Board.",
                            Name = "Burton Board",
                            Price = 12.95m,
                            ShortDescription = "Awesome Burton Board"
                        },
                        new
                        {
                            ItemId = 2,
                            CategoryId = 2,
                            ImageThumbnailUrl = "https://images.evo.com/imgp/700/119214/515639/smith-squad-xl-goggles-.jpg",
                            ImageUrl = "https://images.evo.com/imgp/700/119214/515639/smith-squad-xl-goggles-.jpg",
                            InStock = true,
                            IsDealOfTheWeek = false,
                            LongDescription = "Best goggles of 2019 for wind/snow resistance, and glare reduction. ",
                            Name = "Smith Squad Goggles",
                            Price = 18.95m,
                            ShortDescription = "Smith Squad Snowboard Goggles"
                        },
                        new
                        {
                            ItemId = 3,
                            CategoryId = 2,
                            ImageThumbnailUrl = "https://summitsports.scene7.com/is/image/SummitSports/573741_573741_1?$600$",
                            ImageUrl = "https://summitsports.scene7.com/is/image/SummitSports/573741_573741_1?$600$",
                            InStock = true,
                            IsDealOfTheWeek = false,
                            LongDescription = "Flexible and Secure.",
                            Name = "Burton Bindings",
                            Price = 18.95m,
                            ShortDescription = "Awesome Burton Bindings"
                        });
                });

            modelBuilder.Entity("CoreIntroProject.Models.Item", b =>
                {
                    b.HasOne("CoreIntroProject.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
